class Solution:
    def minJumps(self, arr: List[int]) -> int:
        g=collections.defaultdict(list)
        for i,a in enumerate(arr):
            if (i>0) and (i<len(arr)-1) and (a==arr[i-1]==arr[i+1]):
                continue
            g[a].append(i)
        seen_set={0}
        q=collections.deque([(0,0)])
        step=0
        while q:
            p,step=q.popleft()
            if p==len(arr)-1:
                return step
            for k in [p-1,p+1]+g[arr[p]]:
                if k in seen_set:
                    continue
                if 0<=k<=len(arr)-1:
                    seen_set.add(k)
                    q.append((k,step+1))
        return 0
#先用字典存储数组值及下标列表
#对于连续出现的字符，如“77...77”这样的情况，只记录首尾，跳过中间，否则TLE
#其余就是标准BFS流程了
#https://www.cnblogs.com/journeyonmyway/p/12729724.html
