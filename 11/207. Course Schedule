class Solution:
    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:
        graph=collections.defaultdict(list)
        indegrees=[0]*numCourses
        for i in prerequisites:
            graph[i[1]].append(i[0])
            indegrees[i[0]]+=1
        queue=collections.deque()
        for i in range(numCourses):
            if indegrees[i]==0:
                queue.append(i)
                
        while queue:
            tmp=queue.popleft()
            indegrees[tmp]=-1
            for j in graph[tmp]:
                indegrees[j]-=1
                if indegrees[j]==0:
                    queue.append(j)
                    
        for i in indegrees:
            if i!=-1:
                return False
        return True
