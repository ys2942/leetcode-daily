class Solution:
    def cutOffTree(self, forest: List[List[int]]) -> int:
        m,n=len(forest),len(forest[0])
        trees=sorted([(forest[i][j],i,j) for i in range(m) for j in range(n) if forest[i][j]>1])
        
        def bfs(sx,sy,tx,ty):
            queue=collections.deque([(sx,sy)])
            seen=set([(sx,sy)])
            step=0
            while queue:
                size=len(queue)
                for _ in range(size):
                    x,y=queue.popleft()
                    if x==tx and y==ty:
                        return step
                    for nx,ny in [(x,y-1),(x-1,y),(x,y+1),(x+1,y)]:
                        if 0<=nx<m and 0<=ny<n and (nx,ny) not in seen and forest[nx][ny]>0:
                            queue.append((nx,ny))
                            seen.add((nx,ny))
                step+=1
            return -1
        
        cnt=0
        trees=[(forest[0][0],0,0)]+trees
        for i in range(len(trees)-1):
            d=bfs(trees[i][1],trees[i][2],trees[i+1][1],trees[i+1][2])
            if d<0: return -1
            cnt+=d
        return cnt
