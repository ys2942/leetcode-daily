#312. Burst Balloons

class Solution:
    def maxCoins(self, nums: List[int]) -> int:
        n=len(nums)
        nums.insert(0,1)
        nums.append(1)
        c=[[0]*(n+2) for _ in range(n+2)]
        return self.dfs(nums,c,1,n)
    
    def dfs(self,nums,c,i,j):
        if i>j:
            return 0
        if c[i][j]>0:
            return c[i][j]
        if i==j:
            return nums[i-1]*nums[i]*nums[i+1]
        res=0
        for k in range(i,j+1):
            res=max(res,self.dfs(nums,c,i,k-1)+nums[i-1]*nums[k]*nums[j+1]+self.dfs(nums,c,k+1,j))
        c[i][j]=res
        return c[i][j]
