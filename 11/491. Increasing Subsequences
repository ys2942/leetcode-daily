class Solution:
    def findSubsequences(self, nums: List[int]) -> List[List[int]]:
        res = set()
        self.dfs(0, nums, [], res)
        return list(res)
    
    def dfs(self, pos, nums, path, res):
        if len(path)>=2 and tuple(path) not in res:
            res.add(tuple(path))      
        for i in range(pos, len(nums)):
            if not path or nums[i]>=path[-1]:
                #path.append(nums[i])
                self.dfs(i+1, nums, path+[nums[i]], res)
                #path.pop()
