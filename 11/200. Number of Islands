class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        res = 0
        for r in range(len(grid)):
            for c in range(len(grid[0])):
                if grid[r][c] == "1":
                    self.dfs(grid, r, c)
                    res += 1
        return res
        
    def dfs(self, grid, i, j):
        dirs = [[-1, 0], [0, 1], [0, -1], [1, 0]]
        grid[i][j] = "0"
        for dir in dirs:
            nr, nc = i + dir[0], j + dir[1]
            if nr >= 0 and nc >= 0 and nr < len(grid) and nc < len(grid[0]):
                if grid[nr][nc] == "1":
                    self.dfs(grid, nr, nc)

#做法是，我们对每个有“1"的位置进行 DFS，把和它四联通的位置全部变成“0”，这样就能把一个点推广到一个岛。

#所以，我们总的进行了 DFS 的次数，就是总过有多少个岛的数目。

#注意理解dfs函数的意义：已知当前是1，把它周围相邻的所有1全部转成0.
