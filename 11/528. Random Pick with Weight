class Solution:

    def __init__(self, w: List[int]):
        self.w=w
        self.sw=[]
        w_sum=0
        
        for ww in self.w:
            w_sum+=ww
            self.sw.append(w_sum)

    
    def pickIndex(self) -> int:
        return bisect.bisect_left(self.sw,random.randint(1,self.sw[-1]))
        
        
#https://www.jianshu.com/p/8ee39d63a7d1
        
        


# Your Solution object will be instantiated and called as such:
# obj = Solution(w)
# param_1 = obj.pickIndex()

class Solution:

    def __init__(self, w: List[int]):
        self.preSum=[0]*len(w)
        self.preSum[0]=w[0]
        for i in range(1,len(w)):
            self.preSum[i]=self.preSum[i-1]+w[i]

    
    def pickIndex(self) -> int:
        total=self.preSum[-1]
        rand=random.randint(0,total-1)
        left,right=0,len(self.preSum)-1
        while left+1<right:
            mid=(left+right)//2
            if rand>=self.preSum[mid]:
                left=mid
            else:
                right=mid
        if rand<self.preSum[left]:
            return left
        return right
    
#https://blog.csdn.net/fuxuemingzhu/article/details/81807215?utm_source=blogxgwz3
            
        
        


# Your Solution object will be instantiated and called as such:
# obj = Solution(w)
# param_1 = obj.pickIndex()
