class AllOne:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.h={}

    def inc(self, key: str) -> None:
        """
        Inserts a new key <Key> with value 1. Or increments an existing key by 1.
        """
        self.h[key]=self.h.get(key,0)+1

    def dec(self, key: str) -> None:
        """
        Decrements an existing key by 1. If Key's value is 1, remove it from the data structure.
        """
        self.h[key]-=1
        if not self.h[key]:
            del self.h[key]

    def getMaxKey(self) -> str:
        """
        Returns one of the keys with maximal value.
        """
        if not self.h:
            return ''
        m=max(self.h.values())
        for k,v in self.h.items():
            if v==m:
                return k         
            
    def getMinKey(self) -> str:
        """
        Returns one of the keys with Minimal value.
        """
        if not self.h:
            return ''
        n=min(self.h.values())
        for k,v in self.h.items():
            if v==n:
                return k


# Your AllOne object will be instantiated and called as such:
# obj = AllOne()
# obj.inc(key)
# obj.dec(key)
# param_3 = obj.getMaxKey()
# param_4 = obj.getMinKey()
