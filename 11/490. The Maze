class Solution:
    def hasPath(self, maze: List[List[int]], start: List[int], destination: List[int]) -> bool:
        n,m,seen=len(maze),len(maze[0]),set()
        dirs=[(0,1),(0,-1),(1,0),(-1,0)]
        queue=collections.deque([start])
        print(queue)
        while queue:
            x,y=queue.popleft()
            if [x,y]==destination:
                return True
            for dx,dy in dirs:
                nx,ny=x,y
                while 0<=nx+dx<n and 0<=ny+dy<m and maze[nx+dx][ny+dy]!=1:
                    nx+=dx
                    ny+=dy
                if (nx,ny) in seen:
                    continue
                seen.add((nx,ny))
                queue.append([nx,ny])
        return False
        
        
