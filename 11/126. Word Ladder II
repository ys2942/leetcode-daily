class Solution:
    def findLadders(self, beginWord: str, endWord: str, wordList: List[str]) -> List[List[str]]:
        wordlist=set(wordList)
        res=[]
        layer={}
        layer[beginWord]=[[beginWord]]
        while layer:
            newlayer=collections.defaultdict(list)
            for w in layer:
                if w==endWord:
                    res.extend(k for k in layer[w])
                else:
                    for i in range(len(w)):
                        for c in string.ascii_lowercase:
                            newword=w[:i]+c+w[i+1:]
                            if newword in wordlist:
                                newlayer[newword]+=[j+[newword]for j in layer[w]]
                                #print (newlayer)
            wordlist-=set(newlayer.keys())
            layer=newlayer
        return res
#https://blog.csdn.net/chelseajcole/article/details/94089190?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-29&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-29
