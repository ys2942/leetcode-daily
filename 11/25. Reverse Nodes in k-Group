# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseKGroup(self, head: ListNode, k: int) -> ListNode:
        if k<2:
            return head
        
        node=head
        for i in range(k):
            if not node:
                return head
            node=node.next
        
        cur=head
        pre=None
        for i in range(k):
            temp=cur.next
            cur.next=pre
            pre=cur
            cur=temp
        
        head.next=self.reverseKGroup(cur,k)
        return pre
#https://www.youtube.com/watch?v=W0QkqzwB9qY
