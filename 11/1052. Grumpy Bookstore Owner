class Solution:
    def maxSatisfied(self, customers: List[int], grumpy: List[int], X: int) -> int:
        window=0
        satisfied=0
        maxi=0
        for i,customer in enumerate(customers):
            if grumpy[i]:
                window+=customer
            else:
                satisfied+=customer
            if i>=X:
                window-=grumpy[i-X]*customers[i-X]
            maxi=max(maxi,window)
        return satisfied+maxi
#滑动窗口
#https://leetcode.com/problems/grumpy-bookstore-owner/discuss/299237/C%2B%2B-Sliding-Window
#如果书店老板没有这个超能力，满意的顾客的数量satisfied是固定的，那我们可以通过滑窗的方式，计算X窗口内增加的满意顾客数量，记为add_satisfied，同时记下最大值max_add_satisfied。最后的结果为satisfied + max_add_satisfied。
