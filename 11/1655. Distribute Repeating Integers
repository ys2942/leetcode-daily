class Solution:
    def canDistribute(self, nums: List[int], quantity: List[int]) -> bool:
        from collections import Counter
        c=Counter(nums)
        m=len(quantity)
        left=sorted(c.values())[-m:]
        
        quantity.sort(reverse=True)
        
        def func(left,quantity, customer):
            if customer==len(quantity):
                return True
            for i in range(len(left)):
                if left[i]>=quantity[customer]:
                    left[i]-=quantity[customer]
                    if func(left,quantity, customer+1):
                        return True
                    left[i]+=quantity[customer]
            return False
        return func(left, quantity,0)
#https://leetcode.com/problems/distribute-repeating-integers/discuss/935414/Python-Backtracking
