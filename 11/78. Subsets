class Solution:
    def subsets(self, nums: List[int]) -> List[List[int]]:
        res=[]
        def dfs(nums, temp,i):
            res.append(temp[:])
            for i in range(i,len(nums)):
                temp.append(nums[i])
                dfs(nums,temp,i+1)
                temp.pop()
        dfs(nums,[],0)
        return res
#https://www.youtube.com/watch?v=Az3PfUep7gk

class Solution:
    def subsets(self, nums: List[int]) -> List[List[int]]:
        res=[]
        self.bt(nums,0,res,[])
        return res
    
    def bt(self,nums,i,res,path):
        res.append(path[:])
        for j in range(i,len(nums)):
            self.bt(nums,j+1,res,path+[nums[j]])
