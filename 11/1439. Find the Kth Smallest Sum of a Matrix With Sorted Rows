class Solution:
    def kthSmallest(self, mat: List[List[int]], k: int) -> int:
        m, n = len(mat), len(mat[0])
        smallest = sum(mat[i][0] for i in range(m))
        seen = set()
        hp=[(smallest, [0]*m)]
        k -= 1
        while hp:
            total, idx = heapq.heappop(hp)
            if not k:
                return total
            k-=1
            for i in range(m):
                col = idx[i]
                if col == n-1:
                    continue
                c_total, c_idx = total, idx[:]
                c_total -= mat[i][col]
                c_total +=mat[i][col+1]
                c_idx[i]=col+1
                if tuple(c_idx) in seen:
                    continue
                heapq.heappush(hp, (c_total, c_idx))
                seen.add(tuple(c_idx))
        return -1
#https://leetcode.com/problems/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows/discuss/1036586/Python-Heap
